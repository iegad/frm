package test

import (
	"encoding/base64"
	"testing"

	"github.com/gox/frm/utils"
)

func TestAes(t *testing.T) {
	data, err := base64.StdEncoding.DecodeString("eyJ0b2tlbiI6IjIxMTM0MWFhLTJkMzAtNDBiMS1hY2M3LWZmZTI5MGM4Zjc5MSIsInVzZXJfaW5mbyI6eyJpZCI6MSwidXNlcl9uYW1lIjoicm9vdCIsIm5pY2tuYW1lIjoicm9vdCIsInBob25lX25vIjoiIiwiZGVzYyI6IuaLpeeUqOaJgOacieadg+mZkCwg5LiU5LiN5Y+v5Yig6Zmk6K+l55So5oi3IiwidGciOiIiLCJncm91cF9pZCI6MSwicHJvamVjdF9pZCI6MCwibWVudXMiOlsxLDIsMyw0LDUsNiw3LDgsOSwxMCwxMSwxMiwxMywxNCwxNV0sImFjdGlvbnMiOltdLCJjcmVhdGVfdGltZSI6MTc1Mzc5NTM0NSwibGFzdF91cGRhdGUiOjE3NTM3OTUzNDUsInN0YXR1cyI6MX0sIm1lbnVfbGlzdCI6W3siaWQiOjEsImtleSI6ImhvbWUiLCJuYW1lIjoi5Li76aG1IiwicGFyZW50X2lkIjowLCJkZXNjIjoi5Li76aG1Iiwic3RhdHVzIjoxfSx7ImlkIjoyLCJrZXkiOiJtZW51IiwibmFtZSI6IuiPnOWNleeuoeeQhiIsInBhcmVudF9pZCI6MCwiZGVzYyI6IuiPnOWNleeuoeeQhiIsInN0YXR1cyI6MX0seyJpZCI6Mywia2V5IjoiYWN0aW9uIiwibmFtZSI6IuaTjeS9nOadg+mZkCIsInBhcmVudF9pZCI6MCwiZGVzYyI6IuaTjeS9nOadg+mZkOeuoeeQhiIsInN0YXR1cyI6MX0seyJpZCI6NCwia2V5IjoiZ3JvdXAiLCJuYW1lIjoi57uE566h55CGIiwicGFyZW50X2lkIjowLCJkZXNjIjoi57uE566h55CGIiwic3RhdHVzIjoxfSx7ImlkIjo1LCJrZXkiOiJwcm9qZWN0IiwibmFtZSI6IumhueebrueuoeeQhiIsInBhcmVudF9pZCI6MCwiZGVzYyI6IumhueebrueuoeeQhiIsInN0YXR1cyI6MX0seyJpZCI6Niwia2V5Ijoic3RhZmYiLCJuYW1lIjoi5Lq65ZGY566h55CGIiwicGFyZW50X2lkIjowLCJkZXNjIjoi5Lq65ZGY566h55CGIiwic3RhdHVzIjoxfSx7ImlkIjo3LCJrZXkiOiJjbG91ZF9wcm92aWRlciIsIm5hbWUiOiLkupHmnI3liqHllYYiLCJwYXJlbnRfaWQiOjAsImRlc2MiOiLkupHmnI3liqHllYYiLCJzdGF0dXMiOjF9LHsiaWQiOjgsImtleSI6InNtc19wcm92aWRlciIsIm5hbWUiOiJTTVPmnI3liqHllYYiLCJwYXJlbnRfaWQiOjAsImRlc2MiOiJTTVPmnI3liqHllYYiLCJzdGF0dXMiOjF9LHsiaWQiOjksImtleSI6InNlc19wcm92aWRlciIsIm5hbWUiOiJTRVPmnI3liqHllYYiLCJwYXJlbnRfaWQiOjAsImRlc2MiOiJTRVPmnI3liqHllYYiLCJzdGF0dXMiOjF9LHsiaWQiOjEwLCJrZXkiOiJvdGhlcl9wcm92aWRlciIsIm5hbWUiOiLlhbbku5bmnI3liqHllYYiLCJwYXJlbnRfaWQiOjAsImRlc2MiOiLlhbbku5bmnI3liqHllYYiLCJzdGF0dXMiOjF9LHsiaWQiOjExLCJrZXkiOiJjbG91ZCIsIm5hbWUiOiLkupHmnI3liqEiLCJwYXJlbnRfaWQiOjAsImRlc2MiOiLkupHmnI3liqEiLCJzdGF0dXMiOjF9LHsiaWQiOjEyLCJrZXkiOiJkb2NrZXIiLCJuYW1lIjoiZG9ja2VyIiwicGFyZW50X2lkIjowLCJkZXNjIjoiZG9ja2VyIiwic3RhdHVzIjoxfSx7ImlkIjoxMywia2V5IjoicGtnX3VwZGF0ZV9yY2QiLCJuYW1lIjoi5pu05paw6K6w5b2VIiwicGFyZW50X2lkIjowLCJkZXNjIjoi5pu05paw6K6w5b2VIiwic3RhdHVzIjoxfSx7ImlkIjoxNCwia2V5IjoiZG9tYWluIiwibmFtZSI6IuWfn+WQjeeuoeeQhiIsInBhcmVudF9pZCI6MCwiZGVzYyI6IuWfn+WQjeeuoeeQhiIsInN0YXR1cyI6MX0seyJpZCI6MTUsImtleSI6ImxvZyIsIm5hbWUiOiLml6Xlv5fnrqHnkIYiLCJwYXJlbnRfaWQiOjAsImRlc2MiOiLml6Xlv5fnrqHnkIYiLCJzdGF0dXMiOjF9XX0=")
	if err != nil {
		t.Fatalf("base.DecodeString failed: %v", err)
	}

	decrypted, err := utils.AesGcmDecrypt(data, []byte("fe93-4c0f-861b-3"))
	if err != nil {
		t.Fatalf("Failed to decrypt: %v", err)
	}

	t.Logf("decrypted: %v", string(decrypted))
}
